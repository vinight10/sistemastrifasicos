import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

# Título do aplicativo
st.title("Conversor de Coordenadas")

# Opção para selecionar o tipo de coordenada
opcao = st.radio("Selecione o tipo de coordenada:", ("Polar para Retangular", "Retangular para Polar"))

if opcao == "Polar para Retangular":
    # Entrada para coordenadas polares
    modulo = st.number_input("Módulo (r):")
    angulo = st.number_input("Ângulo (graus):")

    # Converter coordenadas polares para retangulares
    x = modulo * np.cos(np.radians(angulo))
    y = modulo * np.sin(np.radians(angulo))

    # Exibir coordenadas retangulares
    st.write(f"Coordenadas Retangulares (x, y): ({x:.2f}, {y:.2f})")

    # Plotar coordenadas polares e retangulares
    fig, ax = plt.subplots(1, 2, figsize=(12, 6))
    ax[0].plot([0, x], [0, y], marker='o')
    ax[0].set_xlim(0, max(modulo, x) + 1)
    ax[0].set_ylim(0, max(modulo, y) + 1)
    ax[0].set_title("Coordenadas Retangulares")
    ax[0].grid(True)

    ax[1].plot(angulo, modulo, 'ro')
    ax[1].set_rlabel_position(90)
    ax[1].set_yticks([modulo])
    ax[1].set_yticklabels([f"{modulo}"])
    ax[1].set_title("Coordenadas Polares")
    ax[1].grid(True)

    st.pyplot(fig)

else:
    # Entrada para coordenadas retangulares
    x = st.number_input("Parte Real (x):")
    y = st.number_input("Parte Imaginária (y):")

    # Converter coordenadas retangulares para polares
    modulo = np.sqrt(x ** 2 + y ** 2)
    angulo = np.degrees(np.arctan2(y, x))

    # Exibir coordenadas polares
    st.write(f"Coordenadas Polares (módulo, ângulo): ({modulo:.2f}, {angulo:.2f} graus)")

    # Plotar coordenadas polares e retangulares
    fig, ax = plt.subplots(1, 2, figsize=(12, 6))
    ax[0].plot([0, x], [0, y], marker='o')
    ax[0].set_xlim(min(x, 0) - 1, max(x, 0) + 1)
    ax[0].set_ylim(min(y, 0) - 1, max(y, 0) + 1)
    ax[0].set_title("Coordenadas Retangulares")
    ax[0].grid(True)

    ax[1].plot(angulo, modulo, 'ro')
    ax[1].set_rlabel_position(90)
    ax[1].set_yticks([modulo])
    ax[1].set_yticklabels([f"{modulo}"])
    ax[1].set_title("Coordenadas Polares")
    ax[1].grid(True)

    st.pyplot(fig)